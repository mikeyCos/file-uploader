// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// https://www.prisma.io/docs/orm/prisma-migrate/workflows/customizing-migrations#how-to-edit-a-migration-file

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String   @db.Text
  expiresAt DateTime
}

model Account {
  id       String   @id @default(uuid())
  email    String   @unique
  name     String
  username String   @unique
  password String
  folders  Folder[]
  files    File[]
}

// How to have nested folders?
// How to dictate a folder is shareable with a expiration date?
model Folder {
  id        String   @id @default(uuid())
  name      String   @default("New folder")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  account   Account  @relation(fields: [accountId], references: [id])
  accountId String

  parentFolderId String?
  parentFolder   Folder?  @relation("SubFolders", fields: [parentFolderId], references: [id])
  subFolders     Folder[] @relation("SubFolders")

  files File[]
}

// Is there a better way to reference the account without the files field in Account model?
// How can files 
model File {
  id          String   @id @default(uuid())
  name        String   @default("New file")
  size        Int
  url         String
  storagePath String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  account   Account @relation(fields: [accountId], references: [id])
  accountId String

  folder   Folder? @relation(fields: [folderId], references: [id], onDelete: Cascade)
  folderId String?
  // folderId String? @default("root")
}
